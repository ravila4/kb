{"pageProps":{"note":{"id":"x9wl80kifhmlnfpu6n1xf28","title":"Docker","desc":"Basic notes about using Docker","updated":1658971664765,"created":1647060044895,"custom":{},"fname":"linux.docker","type":"note","vault":{"fsPath":"vault","remote":{"type":"git","url":"git@github.com:ravila4/knowledgebase.git"}},"contentHash":"72156145b286005b5f4ef760cbb94f54","links":[{"from":{"fname":"database.elasticsearch.installation","id":"fg0husctqcykweji6k1bduj","vaultName":"vault"},"type":"backlink","position":{"start":{"line":7,"column":45,"offset":81},"end":{"line":7,"column":61,"offset":97},"indent":[]},"value":"linux.docker"},{"from":{"fname":"database.elasticsearch.installation","id":"fg0husctqcykweji6k1bduj","vaultName":"vault"},"type":"backlink","position":{"start":{"line":22,"column":43,"offset":683},"end":{"line":22,"column":94,"offset":734},"indent":[]},"value":"linux.docker"}],"anchors":{"installing-docker":{"type":"header","text":"Installing Docker","value":"installing-docker","line":8,"column":0,"depth":2},"ubuntu-installation-july-2020":{"type":"header","text":"Ubuntu installation (July 2020)","value":"ubuntu-installation-july-2020","line":12,"column":0,"depth":3},"fedora-installation-january-2020":{"type":"header","text":"Fedora installation (January 2020)","value":"fedora-installation-january-2020","line":22,"column":0,"depth":3},"getting-docker-images":{"type":"header","text":"Getting Docker Images","value":"getting-docker-images","line":45,"column":0,"depth":2},"running-containers":{"type":"header","text":"Running Containers","value":"running-containers","line":59,"column":0,"depth":2},"common-options":{"type":"header","text":"Common options:","value":"common-options","line":63,"column":0,"depth":3},"interacting-with-containers":{"type":"header","text":"Interacting with containers","value":"interacting-with-containers","line":86,"column":0,"depth":2},"basic-commands":{"type":"header","text":"Basic commands","value":"basic-commands","line":88,"column":0,"depth":3},"connect-to-a-container-as-root":{"type":"header","text":"Connect to a container as root","value":"connect-to-a-container-as-root","line":100,"column":0,"depth":3},"listing-containers-in-docker":{"type":"header","text":"Listing Containers in Docker","value":"listing-containers-in-docker","line":104,"column":0,"depth":2},"options":{"type":"header","text":"Options:","value":"options","line":112,"column":0,"depth":3},"clearing-non-running-containers":{"type":"header","text":"Clearing Non-running Containers","value":"clearing-non-running-containers","line":122,"column":0,"depth":2},"mounting-a-host-filesystem":{"type":"header","text":"Mounting a Host Filesystem","value":"mounting-a-host-filesystem","line":134,"column":0,"depth":2},"fix-for-permissions-issues":{"type":"header","text":"Fix for permissions issues","value":"fix-for-permissions-issues","line":141,"column":0,"depth":3},"mapping-network-ports":{"type":"header","text":"Mapping Network Ports","value":"mapping-network-ports","line":173,"column":0,"depth":2},"saving-changes-to-an-image":{"type":"header","text":"Saving Changes to an Image","value":"saving-changes-to-an-image","line":177,"column":0,"depth":2},"docker-files":{"type":"header","text":"Docker Files","value":"docker-files","line":182,"column":0,"depth":2},"build-dockerfile":{"type":"header","text":"Build Dockerfile","value":"build-dockerfile","line":203,"column":0,"depth":3},"docker-compose":{"type":"header","text":"Docker Compose","value":"docker-compose","line":211,"column":0,"depth":2},"run-a-docker-compose-file":{"type":"header","text":"Run a docker compose file","value":"run-a-docker-compose-file","line":221,"column":0,"depth":3}},"children":[],"parent":"77irrssbs1ld66im3uhw4yx","data":{}},"body":"<h1 id=\"docker\">Docker<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker\"></a></h1>\n<h2 id=\"installing-docker\">Installing Docker<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#installing-docker\"></a></h2>\n<p>Installation steps have changed quite frequently with new releases of Docker. I will do my best to keep this up-to date, but no guarantees. Check your current release's instructions.</p>\n<h3 id=\"ubuntu-installation-july-2020\">Ubuntu installation (July 2020)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ubuntu-installation-july-2020\"></a></h3>\n<p>Older versions of Docker were called docker, docker.io, or docker-engine. Now, the packages to install are docker-ce, docker-ce-cli, and containerd.io.</p>\n<p>Official documentation:</p>\n<p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">https://docs.docker.com/engine/install/ubuntu/</a></p>\n<p>For Ubuntu 20.04, follow instructions <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04\">here</a>.</p>\n<h3 id=\"fedora-installation-january-2020\">Fedora installation (January 2020)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fedora-installation-january-2020\"></a></h3>\n<pre><code>sudo dnf install docker\nsudo sudo systemctl enable docker.service\nsudo systemctl start docker.service\n</code></pre>\n<p><strong>Note:</strong> Fedora 31 had problems starting the docker daemon.</p>\n<p>Debugging with: <code>sudo dockerd --debug</code> shows \"Devices cgroup isn't mounted\". The solution was to modify the grub in order to start cgroup</p>\n<pre><code>sudo dnf install -y grubby\nsudo grubby --update-kernel=ALL --args=\"systemd.unified_cgroup_hierarchy=0\"\n</code></pre>\n<p>Reboot computer.</p>\n<p>Finally, add user to the Docker group:</p>\n<pre><code>sudo groupadd docker &#x26;&#x26; sudo gpasswd -a ${USER} docker\n</code></pre>\n<p>Log out and in again to see changes.</p>\n<h2 id=\"getting-docker-images\">Getting Docker Images<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#getting-docker-images\"></a></h2>\n<p>Pull from Docker Hub:</p>\n<pre><code>docker pull hub.docker.com/r/microsoft/powershell\n</code></pre>\n<p>We may need to specify a tag, e.g.:</p>\n<pre><code>docker pull ouchc/relion3.1:ubuntu16.04\n</code></pre>\n<p>Search for images: <code>docker search</code></p>\n<p>See installed images: <code>docker images</code></p>\n<h2 id=\"running-containers\">Running Containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#running-containers\"></a></h2>\n<p>Use <code>docker run</code> to initially run a container.</p>\n<h3 id=\"common-options\">Common options:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#common-options\"></a></h3>\n<p>-d\n: run in background (daemonize)</p>\n<p>-i\n: interactive</p>\n<p>-t\n: tty</p>\n<p>-p\n: make a port available outside container (<strong>HOST:CONTAINER</strong>)</p>\n<p>-v\n: mount a volume</p>\n<p>--name\n: assign container a name</p>\n<p>--rm\n: remove container when it exits</p>\n<h2 id=\"interacting-with-containers\">Interacting with containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#interacting-with-containers\"></a></h2>\n<h3 id=\"basic-commands\">Basic commands<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#basic-commands\"></a></h3>\n<p>Once a container is running, you can easily start or stop it.</p>\n<p>Start a container (can use an assigned name): <code>docker start</code></p>\n<p>Stop a container <code>docker stop</code></p>\n<p>Execute a command off a running container: <code>docker exec</code></p>\n<p>Look inside container: <code>docker logs</code></p>\n<h3 id=\"connect-to-a-container-as-root\">Connect to a container as root<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#connect-to-a-container-as-root\"></a></h3>\n<p><code>docker exec -u 0 -it container_id /bin/bash</code></p>\n<h2 id=\"listing-containers-in-docker\">Listing Containers in Docker<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#listing-containers-in-docker\"></a></h2>\n<p>To show only running containers use:</p>\n<pre><code>docker container ls\n</code></pre>\n<p>The old, shorter way of doing this is <code>docker ps</code>.</p>\n<h3 id=\"options\">Options:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#options\"></a></h3>\n<p>-a\n: see all containers</p>\n<p>-s\n: see container sizes</p>\n<h2 id=\"clearing-non-running-containers\">Clearing Non-running Containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#clearing-non-running-containers\"></a></h2>\n<p>Containers that are not running are not taking any system resources besides disk space.</p>\n<p>The docker run flag <code>--rm</code> will automatically remove a container when it exits.</p>\n<p>Remove a specific container: <code>docker rm 3e552code34a</code></p>\n<p>Removes all stopped containers: <code>docker container prune</code></p>\n<p>Clean unused containers, networks, images, and volumes: <code>docker system prune</code></p>\n<h2 id=\"mounting-a-host-filesystem\">Mounting a Host Filesystem<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mounting-a-host-filesystem\"></a></h2>\n<p>Use the <code>-v</code> flag:</p>\n<pre><code>docker run -v /host/directory:/container/directory -other -options image_name command_to_run\n</code></pre>\n<h3 id=\"fix-for-permissions-issues\">Fix for permissions issues<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fix-for-permissions-issues\"></a></h3>\n<p>In Fedora, SELinux can cause issues with mounting volumes.\nThe solution is to issue a SELinux rule:\n<code>chcon -Rt svirt_sandbox_file_t /path/to/volume</code></p>\n<p>This got easier recently since Docker finally merged a patch in docker-1.7.</p>\n<p>This patch adds support for \"z\" and \"Z\" as options on the volume mounts (-v).</p>\n<p>For example:</p>\n<pre><code>docker run -v /var/db:/var/db:z rhel7 /bin/sh\n</code></pre>\n<p>Will automatically do the <code>chcon -Rt svirt_sandbox_file_t /var/db</code>.</p>\n<p>Even better, you can use Z.</p>\n<pre><code>docker run -v /var/db:/var/db:Z rhel7 /bin/sh\n</code></pre>\n<p>This will label the content inside the container with the exact MCS label that the container will run with, basically it runs <code>chcon -Rt svirt_sandbox_file_t -l s0:c1,c2 /var/db</code>,\nwhere s0:c1,c2 differs for each container.</p>\n<p>For more info: <a href=\"https://docs.docker.com/storage/volumes/\">https://docs.docker.com/storage/volumes/</a></p>\n<p><strong>e.g.</strong> to run my powershell docker container with a mounted home directory:</p>\n<pre><code>docker run -v /home/ravila/:/home/ravila/:Z -it mcr.microsoft.com/powershell\n</code></pre>\n<h2 id=\"mapping-network-ports\">Mapping Network Ports<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mapping-network-ports\"></a></h2>\n<pre><code>docker run --name mycontainer -p 8080:8080 -p 8000:8000\n</code></pre>\n<h2 id=\"saving-changes-to-an-image\">Saving Changes to an Image<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#saving-changes-to-an-image\"></a></h2>\n<p>If you change anything (like install new packages) in the running container and exit the container the changes are not automatically saved. If you want to save them in an image, <strong>use <code>docker commit</code></strong>.</p>\n<h2 id=\"docker-files\">Docker Files<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker-files\"></a></h2>\n<p>A simple example Dockerfile:</p>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token comment\"># Base image</span>\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> fedora:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> dnf -y update &#x26;&#x26; dnf -y install unzip openssl  &#x26;&#x26; dnf clean all</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> UnblockNeteaseMusic-linux-arm7.zip /opt</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> unzip /opt/UnblockNeteaseMusic-linux-arm7.zip -d /opt/</span>\n<span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /opt/UnblockNeteaseMusic</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  ./createCertificate.sh</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENTRYPOINT</span> [<span class=\"token string\">\"/opt/UnblockNeteaseMusic/UnblockNeteaseMusic\"</span>, <span class=\"token string\">\" -b\"</span>, <span class=\"token string\">\" -e\"</span>]</span>\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 443</span>\n</code></pre>\n<p>Docker file reference: <a href=\"https://docs.docker.com/engine/reference/builder/\">https://docs.docker.com/engine/reference/builder/</a></p>\n<p>Best practices: <a href=\"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\">https://docs.docker.com/develop/develop-images/dockerfile_best-practices/</a></p>\n<h3 id=\"build-dockerfile\">Build Dockerfile<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#build-dockerfile\"></a></h3>\n<p>In a directory with a Dockerfile run:</p>\n<p><code>sudo docker build -t \"my-image\" .</code></p>\n<p>If the build is successful you can see  <code>my-image</code> in docker images output.</p>\n<h2 id=\"docker-compose\">Docker Compose<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker-compose\"></a></h2>\n<p><a href=\"https://docs.docker.com/compose/\">https://docs.docker.com/compose/</a></p>\n<p><a href=\"https://developer.fedoraproject.org/tools/docker/compose.html\">https://developer.fedoraproject.org/tools/docker/compose.html</a></p>\n<p>Docker Compose is a tool to orchestrate Docker containers using a simple YAML file which describes your whole setup.</p>\n<p>Installation: <code>sudo dnf install docker-compose</code></p>\n<h3 id=\"run-a-docker-compose-file\">Run a docker compose file<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#run-a-docker-compose-file\"></a></h3>\n<p>Create a YAML file: <code>docker-compose.yml</code>, then in the same directory, run:</p>\n<p><code>docker-compose up</code></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/knowledgebase/notes/fg0husctqcykweji6k1bduj\">Installation</a></li>\n</ul>","noteIndex":{"id":"i3e9kusp519n36iz1ioi387","title":"Ricardo's Notes","desc":"","updated":1660963919727,"created":1647055090448,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault","remote":{"type":"git","url":"git@github.com:ravila4/knowledgebase.git"}},"contentHash":"9cb227c82d046533deea61e24c8a1c1e","links":[],"anchors":{"welcome-to-my-personal-knowledge-base":{"type":"header","text":"Welcome to my Personal Knowledge Base!","value":"welcome-to-my-personal-knowledge-base","line":8,"column":0,"depth":2},"my-links":{"type":"header","text":"My Links","value":"my-links","line":18,"column":0,"depth":2}},"children":["lf1bfgnfsc4s7uh9qsnefdw","qz307gmzctlyybze4spt8ug","jgwsrsqomd2kd3cj73wg804","e0dxh083vpjhkdjw955e2xv","9y8uvew2sqdfv2ftqyolhfg","9m1s0nes0vm0a7mlbgw5hv7","pju469ro805gknxx6p4lvar","jro9xnfg791cmppo1p7oc90","7bg28rkj42r5n52oxwezco3","77irrssbs1ld66im3uhw4yx","mnoouhphnmr5mdj6is5oaz6","bfuvlavhie001y6cersdn98","lkcpotdu9x59v4mh3u6z077"],"parent":null,"data":{},"body":"\n## Welcome to my Personal Knowledge Base!\n\n![](/assets/images/profile.jpg)\n\nI am a bioinformatics programmer, currently working at the Scripps Research Institute.\n\nI enjoy learning about technology, science, and art. 💻 🧬 🎨\n\nThis is my attempt at organizing and offloading knowledge from topics that I come across often, but not necessarily use on a daily basis, or things that I am in the process of learning.\n\n## My Links\n\n[GitHub](https://github.com/ravila4)\n\n[LinkedIn](https://linkedin.com/in/ravila4)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault","remote":{"type":"git","url":"git@github.com:ravila4/knowledgebase.git"}}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"dendronVersion":"0.108.0"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Home","description":"My Personal Knowledge Base","author":"Ricardo Avila"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","theme":"custom","siteUrl":"https://ravila4.github.io/","assetsPrefix":"/knowledgebase","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}